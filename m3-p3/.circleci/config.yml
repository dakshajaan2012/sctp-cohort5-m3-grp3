version: 2.1

# Orbs - reusable packages for use
orbs:
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4
  heroku: circleci/heroku@2.0.0
  snyk: snyk/snyk@1.5.0

# Jobs - the set of instructions
jobs:
    scan:
        docker:
            - image: cimg/node:16.10
        environment:
            IMAGE_NAME: dakshajaan/education-space
            SNYK_TOKEN: $SNYK_TOKEN
        steps:
            - checkout
            - setup_remote_docker      
            - docker/check
            - run: docker build -t $myparkingappv1 .
            - snyk/scan: 
                docker-image-name: $myparkingappv1

  build:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: echo "Installing dependencies..." && npm install

  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: echo "Running tests..." && npm run test

  publish:
    docker:
      - image: cimg/node:16.10
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: dakshajaan/educational-space
      - docker/push:
          image: dakshajaan/educational-space

  deploy:
    docker:
      - image: cimg/node:16.10
    steps:
      - setup_remote_docker
      - heroku/install
      - checkout
      - run:
          name: Heroku Container Push
          command: |
            heroku container:login
            heroku container:push web -a dakshajaan-su-devops
            heroku container:release web -a dakshajaan-su-devops

# Workflows
workflows:
  version: 2
  cicd_flow:
    jobs:
      # Run build and test jobs when main branch is updated
      - build:
          filters:
            branches:
              only: main
      - test:
          requires:
            - build
          filters:
            branches:
              only: main

          # The scan job
      - scan:
          requires:
            - build
          filters:
            branches:
              only: main

      # Run publish job when release branch is updated
      - publish:
          requires:
            - test
          filters:
            branches:
              only: release

      # Optionally run deploy job when release branch is updated
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: release
