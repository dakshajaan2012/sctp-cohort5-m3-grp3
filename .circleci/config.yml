version: 2.1

orbs:
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4
  heroku: circleci/heroku@2.0.0
  snyk: snyk/snyk@1.5.0
  java: circleci/openjdk@1.2.2

jobs:
  scan:
    docker:
      - image: cimg/openjdk:17.0
    environment:
      IMAGE_NAME: dakshajaan/education-space
      SNYK_TOKEN: $SNYK_TOKEN
    steps:
      - checkout
      - java/maven-install
      - run:
          name: Build Spring Boot project
          command: mvn clean install

  build:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: echo "Installing dependencies..." && npm install

  test:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
          app-dir: /home/circleci/project # Set the app-dir parameter to the directory containing package.json
      - run: echo "Running tests..." && npm run test

  publish:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: dakshajaan/educational-space
      - docker/push:
          image: dakshajaan/educational-space

  deploy:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - setup_remote_docker
      - heroku/install
      - checkout
      - run:
          name: Heroku Container Push
          command: |
            heroku container:login
            heroku container:push web -a dakshajaan-su-devops
            heroku container:release web -a dakshajaan-su-devops

workflows:
  version: 2
  cicd_flow:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - test:
          requires:
            - build
          filters:
            branches:
              only: main
      - scan:
          requires:
            - build
          filters:
            branches:
              only: main
      - publish:
          requires:
            - test
          filters:
            branches:
              only: release
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: release
