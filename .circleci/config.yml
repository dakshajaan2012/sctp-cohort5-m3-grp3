version: 2.1

orbs:
  # The maven orb contains a set of prepackaged circleci configuration you can use repeatedly in your configurations files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/maven
  maven: circleci/maven@1.3
  docker: circleci/docker@2.1.4
  snyk: snyk/snyk@1.5.0
  heroku: circleci/heroku@2.0.0

jobs:
  deploy:
    docker:
      - image: cimg/node:16.10
    steps:
      - setup_remote_docker
      - heroku/install
      - checkout
      - run:
          name: Heroku Container Push
          command: |
            heroku container:login
            heroku container:push web -a dakshajaan-su-devops
            heroku container:release web -a dakshajaan-su-devops
  scan:
    docker:
      - image: cimg/node:16.10
    environment:
      IMAGE_NAME: dakshajaan2012/educational-space:project-g3-m4
      - checkout
      - setup_remote_docker
      - docker/check
      - run: docker build -t $IMAGE_NAME .
      - snyk/scan:
          docker-image-name: $IMAGE_NAME
          severity-threshold: critical
  publish: #also known as build-and-push
    executor: docker/docker #define the execution environment in which the steps of a job will run
    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - docker/build: #build the image
          image: dakshajaan2012/educational-space:project-g3-m4
          tag: v1.0.0
      - docker/push: #pushes the image to the specified account in the environment
          image: dakshajaan2012/educational-space:project-g3-m4
          tag: v1.0.0
executors:
  openjdk17:
    docker:
      - image: cimg/openjdk:17.0
      - image: cimg/postgres:15.6
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 2024
          POSTGRES_DB: demodb

workflows:
  build-and-test: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
    jobs:
      - maven/test:
          executor: openjdk17
          pre-steps:
            - run:
                name: Install dockerize
                command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
                environment:
                  DOCKERIZE_VERSION: v0.6.1
            - run:
                name: Wait for db
                command: dockerize -wait tcp://localhost:5432 -timeout 1m
          filters:
            branches:
              only: develop, release
      - scan
      - publish:
          requires:
            - maven/test
          filters:
            branches:
              only: develop, release
      - deploy:
          requires:
            - publish
          filters:
            branches:
              only: release
