version: 2.1

orbs:
  docker: circleci/docker@2.1.4
  heroku: circleci/heroku@2.0.0
  snyk: snyk/snyk@1.5.0
  maven: circleci/maven@1.3

executors:
  openjdk11:
    docker:
      - image: cimg/openjdk:17.0
      - image: cimg/postgres:14.1
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 2024
          POSTGRES_DB: cfd

jobs:
  my_job:
    docker:
      - image: cimg/openjdk:17.0 # Use any image that includes Java
    steps:
      - checkout

  build:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Set up JDK 17
          command: |
            export JAVA_HOME=/C/Users/daksh/AppData/Local/Programs/Eclipse Adoptium/jdk-17.0.10.7-hotspot
            export PATH=$JAVA_HOME/bin:$PATH
      - run:
          name: Build project
          command: mvn clean install

  test:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Set up JDK 17
          command: |
            export JAVA_HOME=/C/Users/daksh/AppData/Local/Programs/Eclipse Adoptium/jdk-17.0.10.7-hotspot
            export PATH=$JAVA_HOME/bin:$PATH
      - run:
          name: Run tests
          command: mvn test

  deploy_heroku:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Set up JDK 17
          command: |
            export JAVA_HOME=/C/Users/daksh/AppData/Local/Programs/Eclipse Adoptium/jdk-17.0.10.7-hotspot
            export PATH=$JAVA_HOME/bin:$PATH
      - run:
          name: Heroku Container Push
          command: |
            heroku container:login
            heroku container:push web -a dakshajaan-su-devops
            heroku container:release web -a dakshajaan-su-devops

workflows:
  my_cicd_flow:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy_heroku:
          requires:
            - test
          filters:
            branches:
              only: master
