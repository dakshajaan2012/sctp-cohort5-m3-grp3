version: 2.1

orbs:
  docker: circleci/docker@2.1.4
  heroku: circleci/heroku@2.0.0
  snyk: snyk/snyk@1.5.0
  maven: circleci/maven@1.3

executors:
  openjdk11:
    docker:
      - image: cimg/openjdk:11.0
      - image: cimg/postgres:14.1
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 2024
          POSTGRES_DB: cfd

jobs:
  scan:
    docker:
      - image: openjdk:17-oracle
    environment:
      IMAGE_NAME: dakshajaan/education-space:projectg3m4
      SNYK_TOKEN: $SNYK_TOKEN
    steps:
      - run:
          name: Install Maven
          command: |
            apt-get update
            apt-get install -y maven

  build:
    docker:
      - image: openjdk:17-oracle
    steps:
      - checkout
      - run:
          name: Build Spring Boot project
          command: mvn clean install

  test:
    docker:
      - image: openjdk:17-oracle
    steps:
      - checkout
      - run:
          name: Run tests for Spring Boot project
          command: mvn test

  publish:
    docker:
      - image: openjdk:17-oracle
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: dakshajaan/educational-space
      - docker/push:
          image: dakshajaan/educational-space

  deploy:
    docker:
      - image: openjdk:17-oracle
    steps:
      - setup_remote_docker
      - heroku/install
      - checkout
      - run:
          name: Heroku Container Push
          command: |
            heroku container:login
            heroku container:push web -a dakshajaan-su-devops
            heroku container:release web -a dakshajaan-su-devops

workflows:
  version: 2
  cicd_flow:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - test:
          requires:
            - build
          filters:
            branches:
              only: main
      - scan:
          requires:
            - build
          filters:
            branches:
              only: main
      - publish:
          requires:
            - test
          filters:
            branches:
              only: release
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: release
